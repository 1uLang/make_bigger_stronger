// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "github.com/1uLang/make_bigger_stronger/app/api/internal/handler/admin"
	question "github.com/1uLang/make_bigger_stronger/app/api/internal/handler/question"
	questiontypes "github.com/1uLang/make_bigger_stronger/app/api/internal/handler/question/types"
	user "github.com/1uLang/make_bigger_stronger/app/api/internal/handler/user"
	"github.com/1uLang/make_bigger_stronger/app/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: admin.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/statistic",
				Handler: admin.StatisticHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/import",
				Handler: question.ImportHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/template",
				Handler: question.TemplateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: question.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit",
				Handler: question.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/delete",
				Handler: question.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: question.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/analyzing",
				Handler: question.AnalyzingHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/question"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: questiontypes.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/edit",
				Handler: questiontypes.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/option",
				Handler: questiontypes.OptionHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/delete",
				Handler: questiontypes.DeleteHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/question/types"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: user.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: user.InfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: user.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/user"),
	)
}
